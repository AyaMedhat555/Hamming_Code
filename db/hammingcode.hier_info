|hammingcode
datain => datain.IN1
clk_encoder => clk_encoder.IN1
clk_decoder => clk_decoder.IN1
reset_encoder => reset_encoder.IN1
reset_decoder => reset_decoder.IN1
enable => enable.IN2
serial_out << main_decoder:decoder.dataout
clkc_encoder << main_encoder:encoder.clkc
clkd_encoder << main_encoder:encoder.clkd
clkc_decoder << main_decoder:decoder.clkc
clkd_decoder << main_decoder:decoder.clkd


|hammingcode|main_encoder:encoder
datain => datain.IN1
clk => clk.IN2
reset => reset.IN5
enable => enable.IN3
dataout <= encoder_shifter_15:SHIFTING15.serial_out
clkc <= clk_out_c.DB_MAX_OUTPUT_PORT_TYPE
clkd <= clk_out_d.DB_MAX_OUTPUT_PORT_TYPE


|hammingcode|main_encoder:encoder|CLK_DIVIDER:CLK_D_11MHZ
CLK_IN => POSETIVE_COUNT[0].CLK
CLK_IN => POSETIVE_COUNT[1].CLK
CLK_IN => POSETIVE_COUNT[2].CLK
CLK_IN => POSETIVE_COUNT[3].CLK
CLK_IN => NEGATIVE_COUNT[0].CLK
CLK_IN => NEGATIVE_COUNT[1].CLK
CLK_IN => NEGATIVE_COUNT[2].CLK
CLK_IN => NEGATIVE_COUNT[3].CLK
REST => NEGATIVE_COUNT[0].ACLR
REST => NEGATIVE_COUNT[1].PRESET
REST => NEGATIVE_COUNT[2].PRESET
REST => NEGATIVE_COUNT[3].PRESET
REST => POSETIVE_COUNT[0].ACLR
REST => POSETIVE_COUNT[1].ACLR
REST => POSETIVE_COUNT[2].ACLR
REST => POSETIVE_COUNT[3].ACLR
CLK_OUT <= CLK_OUT.DB_MAX_OUTPUT_PORT_TYPE


|hammingcode|main_encoder:encoder|CLK_DIVIDER:CLK_C_15MHZ
CLK_IN => POSETIVE_COUNT[0].CLK
CLK_IN => POSETIVE_COUNT[1].CLK
CLK_IN => POSETIVE_COUNT[2].CLK
CLK_IN => POSETIVE_COUNT[3].CLK
CLK_IN => NEGATIVE_COUNT[0].CLK
CLK_IN => NEGATIVE_COUNT[1].CLK
CLK_IN => NEGATIVE_COUNT[2].CLK
CLK_IN => NEGATIVE_COUNT[3].CLK
REST => NEGATIVE_COUNT[0].ACLR
REST => NEGATIVE_COUNT[1].PRESET
REST => NEGATIVE_COUNT[2].ACLR
REST => NEGATIVE_COUNT[3].PRESET
REST => POSETIVE_COUNT[0].ACLR
REST => POSETIVE_COUNT[1].ACLR
REST => POSETIVE_COUNT[2].ACLR
REST => POSETIVE_COUNT[3].ACLR
CLK_OUT <= CLK_OUT.DB_MAX_OUTPUT_PORT_TYPE


|hammingcode|main_encoder:encoder|encoder_shifter_11:shift11
in => out.DATAB
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
clk => out[2]~reg0.CLK
clk => out[3]~reg0.CLK
clk => out[4]~reg0.CLK
clk => out[5]~reg0.CLK
clk => out[6]~reg0.CLK
clk => out[7]~reg0.CLK
clk => out[8]~reg0.CLK
clk => out[9]~reg0.CLK
clk => out[10]~reg0.CLK
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|hammingcode|main_encoder:encoder|encoder_Counter_11:counting
clk => write1.CLK
clk => counter_up[0].CLK
clk => counter_up[1].CLK
clk => counter_up[2].CLK
clk => counter_up[3].CLK
reset => counter_up[0].ACLR
reset => counter_up[1].ACLR
reset => counter_up[2].ACLR
reset => counter_up[3].ACLR
reset => write1.ENA
en => write1.OUTPUTSELECT
en => counter_up[3].ENA
en => counter_up[2].ENA
en => counter_up[1].ENA
en => counter_up[0].ENA
write <= write1.DB_MAX_OUTPUT_PORT_TYPE


|hammingcode|main_encoder:encoder|encoder:encoding
datain[0] => WideXor0.IN0
datain[0] => WideXor1.IN0
datain[0] => dataout[2].DATAIN
datain[1] => WideXor0.IN1
datain[1] => WideXor2.IN0
datain[1] => dataout[4].DATAIN
datain[2] => WideXor1.IN1
datain[2] => WideXor2.IN1
datain[2] => dataout[5].DATAIN
datain[3] => WideXor0.IN2
datain[3] => WideXor1.IN2
datain[3] => WideXor2.IN2
datain[3] => dataout[6].DATAIN
datain[4] => WideXor0.IN3
datain[4] => WideXor3.IN0
datain[4] => dataout[8].DATAIN
datain[5] => WideXor1.IN3
datain[5] => WideXor3.IN1
datain[5] => dataout[9].DATAIN
datain[6] => WideXor0.IN4
datain[6] => WideXor1.IN4
datain[6] => WideXor3.IN2
datain[6] => dataout[10].DATAIN
datain[7] => WideXor2.IN3
datain[7] => WideXor3.IN3
datain[7] => dataout[11].DATAIN
datain[8] => WideXor0.IN5
datain[8] => WideXor2.IN4
datain[8] => WideXor3.IN4
datain[8] => dataout[12].DATAIN
datain[9] => WideXor1.IN5
datain[9] => WideXor2.IN5
datain[9] => WideXor3.IN5
datain[9] => dataout[13].DATAIN
datain[10] => WideXor0.IN6
datain[10] => WideXor1.IN6
datain[10] => WideXor2.IN6
datain[10] => WideXor3.IN6
datain[10] => dataout[14].DATAIN
dataout[0] <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE
dataout[1] <= WideXor1.DB_MAX_OUTPUT_PORT_TYPE
dataout[2] <= datain[0].DB_MAX_OUTPUT_PORT_TYPE
dataout[3] <= WideXor2.DB_MAX_OUTPUT_PORT_TYPE
dataout[4] <= datain[1].DB_MAX_OUTPUT_PORT_TYPE
dataout[5] <= datain[2].DB_MAX_OUTPUT_PORT_TYPE
dataout[6] <= datain[3].DB_MAX_OUTPUT_PORT_TYPE
dataout[7] <= WideXor3.DB_MAX_OUTPUT_PORT_TYPE
dataout[8] <= datain[4].DB_MAX_OUTPUT_PORT_TYPE
dataout[9] <= datain[5].DB_MAX_OUTPUT_PORT_TYPE
dataout[10] <= datain[6].DB_MAX_OUTPUT_PORT_TYPE
dataout[11] <= datain[7].DB_MAX_OUTPUT_PORT_TYPE
dataout[12] <= datain[8].DB_MAX_OUTPUT_PORT_TYPE
dataout[13] <= datain[9].DB_MAX_OUTPUT_PORT_TYPE
dataout[14] <= datain[10].DB_MAX_OUTPUT_PORT_TYPE


|hammingcode|main_encoder:encoder|encoder_shifter_15:SHIFTING15
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => data[5].CLK
clk => data[6].CLK
clk => data[7].CLK
clk => data[8].CLK
clk => data[9].CLK
clk => data[10].CLK
clk => data[11].CLK
clk => data[12].CLK
clk => data[13].CLK
clk => data[14].CLK
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
data_in[0] => data.DATAB
data_in[1] => data.DATAB
data_in[2] => data.DATAB
data_in[3] => data.DATAB
data_in[4] => data.DATAB
data_in[5] => data.DATAB
data_in[6] => data.DATAB
data_in[7] => data.DATAB
data_in[8] => data.DATAB
data_in[9] => data.DATAB
data_in[10] => data.DATAB
data_in[11] => data.DATAB
data_in[12] => data.DATAB
data_in[13] => data.DATAB
data_in[14] => data.DATAB
serial_out <= data[0].DB_MAX_OUTPUT_PORT_TYPE


|hammingcode|main_decoder:decoder
datain => datain.IN1
clk => clk.IN2
reset => reset.IN5
enable => enable.IN3
dataout <= decoder_shifter_11:shifting11.serial_out
clkc <= clk_out_c.DB_MAX_OUTPUT_PORT_TYPE
clkd <= clk_out_d.DB_MAX_OUTPUT_PORT_TYPE


|hammingcode|main_decoder:decoder|CLK_DIVIDER:CLK_D_11MHZ
CLK_IN => POSETIVE_COUNT[0].CLK
CLK_IN => POSETIVE_COUNT[1].CLK
CLK_IN => POSETIVE_COUNT[2].CLK
CLK_IN => POSETIVE_COUNT[3].CLK
CLK_IN => NEGATIVE_COUNT[0].CLK
CLK_IN => NEGATIVE_COUNT[1].CLK
CLK_IN => NEGATIVE_COUNT[2].CLK
CLK_IN => NEGATIVE_COUNT[3].CLK
REST => NEGATIVE_COUNT[0].ACLR
REST => NEGATIVE_COUNT[1].PRESET
REST => NEGATIVE_COUNT[2].PRESET
REST => NEGATIVE_COUNT[3].PRESET
REST => POSETIVE_COUNT[0].ACLR
REST => POSETIVE_COUNT[1].ACLR
REST => POSETIVE_COUNT[2].ACLR
REST => POSETIVE_COUNT[3].ACLR
CLK_OUT <= CLK_OUT.DB_MAX_OUTPUT_PORT_TYPE


|hammingcode|main_decoder:decoder|CLK_DIVIDER:CLK_C_15MHZ
CLK_IN => POSETIVE_COUNT[0].CLK
CLK_IN => POSETIVE_COUNT[1].CLK
CLK_IN => POSETIVE_COUNT[2].CLK
CLK_IN => POSETIVE_COUNT[3].CLK
CLK_IN => NEGATIVE_COUNT[0].CLK
CLK_IN => NEGATIVE_COUNT[1].CLK
CLK_IN => NEGATIVE_COUNT[2].CLK
CLK_IN => NEGATIVE_COUNT[3].CLK
REST => NEGATIVE_COUNT[0].ACLR
REST => NEGATIVE_COUNT[1].PRESET
REST => NEGATIVE_COUNT[2].ACLR
REST => NEGATIVE_COUNT[3].PRESET
REST => POSETIVE_COUNT[0].ACLR
REST => POSETIVE_COUNT[1].ACLR
REST => POSETIVE_COUNT[2].ACLR
REST => POSETIVE_COUNT[3].ACLR
CLK_OUT <= CLK_OUT.DB_MAX_OUTPUT_PORT_TYPE


|hammingcode|main_decoder:decoder|decoder_shifter_15:shifting15
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
clk => out[2]~reg0.CLK
clk => out[3]~reg0.CLK
clk => out[4]~reg0.CLK
clk => out[5]~reg0.CLK
clk => out[6]~reg0.CLK
clk => out[7]~reg0.CLK
clk => out[8]~reg0.CLK
clk => out[9]~reg0.CLK
clk => out[10]~reg0.CLK
clk => out[11]~reg0.CLK
clk => out[12]~reg0.CLK
clk => out[13]~reg0.CLK
clk => out[14]~reg0.CLK
in => out.DATAB
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
shift => out.OUTPUTSELECT
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|hammingcode|main_decoder:decoder|decoder_Counter_11:count11
clk => write1.CLK
clk => counter_up[0].CLK
clk => counter_up[1].CLK
clk => counter_up[2].CLK
clk => counter_up[3].CLK
reset => counter_up[0].ACLR
reset => counter_up[1].ACLR
reset => counter_up[2].ACLR
reset => counter_up[3].ACLR
reset => write1.ENA
en => write1.OUTPUTSELECT
en => counter_up[3].ENA
en => counter_up[2].ENA
en => counter_up[1].ENA
en => counter_up[0].ENA
write <= write1.DB_MAX_OUTPUT_PORT_TYPE


|hammingcode|main_decoder:decoder|decoder:decoding
in[0] => error.IN0
in[1] => error.IN0
in[2] => error.IN1
in[2] => error.IN1
in[2] => out.DATAA
in[2] => out.DATAB
in[2] => out.DATAB
in[3] => error.IN0
in[4] => error.IN1
in[4] => error.IN1
in[4] => out.DATAA
in[4] => out.DATAB
in[4] => out.DATAB
in[4] => out.DATAB
in[5] => error.IN1
in[5] => error.IN1
in[5] => out.DATAA
in[5] => out.DATAB
in[5] => out.DATAB
in[5] => out.DATAB
in[5] => out.DATAB
in[6] => error.IN1
in[6] => error.IN1
in[6] => error.IN1
in[6] => out.DATAA
in[6] => out.DATAB
in[6] => out.DATAB
in[6] => out.DATAB
in[6] => out.DATAB
in[6] => out.DATAB
in[7] => error.IN0
in[8] => error.IN1
in[8] => error.IN1
in[8] => out.DATAA
in[8] => out.DATAB
in[8] => out.DATAB
in[8] => out.DATAB
in[8] => out.DATAB
in[8] => out.DATAB
in[8] => out.DATAB
in[9] => error.IN1
in[9] => error.IN1
in[9] => out.DATAA
in[9] => out.DATAB
in[9] => out.DATAB
in[9] => out.DATAB
in[9] => out.DATAB
in[9] => out.DATAB
in[9] => out.DATAB
in[9] => out.DATAB
in[10] => error.IN1
in[10] => error.IN1
in[10] => error.IN1
in[10] => out.DATAA
in[10] => out.DATAB
in[10] => out.DATAB
in[10] => out.DATAB
in[10] => out.DATAB
in[10] => out.DATAB
in[10] => out.DATAB
in[10] => out.DATAB
in[10] => out.DATAB
in[11] => error.IN1
in[11] => error.IN1
in[11] => out.DATAA
in[11] => out.DATAB
in[11] => out.DATAB
in[11] => out.DATAB
in[11] => out.DATAB
in[11] => out.DATAB
in[11] => out.DATAB
in[11] => out.DATAB
in[11] => out.DATAB
in[11] => out.DATAB
in[12] => error.IN1
in[12] => error.IN1
in[12] => error.IN1
in[12] => out.DATAA
in[12] => out.DATAB
in[12] => out.DATAB
in[12] => out.DATAB
in[12] => out.DATAB
in[12] => out.DATAB
in[12] => out.DATAB
in[12] => out.DATAB
in[12] => out.DATAB
in[12] => out.DATAB
in[12] => out.DATAB
in[13] => error.IN1
in[13] => error.IN1
in[13] => error.IN1
in[13] => out.DATAA
in[13] => out.DATAB
in[13] => out.DATAB
in[13] => out.DATAB
in[13] => out.DATAB
in[13] => out.DATAB
in[13] => out.DATAB
in[13] => out.DATAB
in[13] => out.DATAB
in[13] => out.DATAB
in[13] => out.DATAB
in[13] => out.DATAB
in[14] => error[0].IN1
in[14] => error[1].IN1
in[14] => error[2].IN1
in[14] => error[3].IN1
in[14] => out.DATAA
in[14] => out.DATAB
in[14] => out.DATAB
in[14] => out.DATAB
in[14] => out.DATAB
in[14] => out.DATAB
in[14] => out.DATAB
in[14] => out.DATAB
in[14] => out.DATAB
in[14] => out.DATAB
in[14] => out.DATAB
in[14] => out.DATAB
in[14] => out.DATAB
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out.DB_MAX_OUTPUT_PORT_TYPE


|hammingcode|main_decoder:decoder|decoder_shifter_11:shifting11
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => data[5].CLK
clk => data[6].CLK
clk => data[7].CLK
clk => data[8].CLK
clk => data[9].CLK
clk => data[10].CLK
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
reset => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
write => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
shift => data.OUTPUTSELECT
data_in[0] => data.DATAB
data_in[1] => data.DATAB
data_in[2] => data.DATAB
data_in[3] => data.DATAB
data_in[4] => data.DATAB
data_in[5] => data.DATAB
data_in[6] => data.DATAB
data_in[7] => data.DATAB
data_in[8] => data.DATAB
data_in[9] => data.DATAB
data_in[10] => data.DATAB
serial_out <= data[0].DB_MAX_OUTPUT_PORT_TYPE


